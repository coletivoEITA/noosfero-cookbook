<VirtualHost *:*>
    ServerName www.<%= @server_name %>
    RedirectMatch ^(.*)$ http://<%= @server_name %>$1
</VirtualHost>

<% @custom_domains.each do |domain| %>
<VirtualHost *:*>
    ServerName www.<%= domain %>
    RedirectMatch ^(.*)$ http://<%= domain %>$1
</VirtualHost>
<% end %>

<VirtualHost *:<%= @server[:proxy_port] %>>
  ServerName <%= @server_name %>
  <% @custom_domains.each do |domain| %>
  ServerAlias <%= domain %>
  <% end %>

  DocumentRoot "<%= "#{@code_path}/public" %>"
  <Directory "<%= "#{@code_path}/public" %>">
    Options FollowSymLinks
    AllowOverride None
    Require all granted
    Order Allow,Deny
    Allow from all
  </Directory>

  ProxyPreserveHost On
  RewriteEngine On

  <% if not @server[:block_bots].empty? %>
  RewriteCond %{HTTP_USER_AGENT} (?:<%= @server[:block_bots].join '|' %>) [NC]
  RewriteRule ^.*$ - [F]
  <% end %>

  # Rewrite index to check for static index.html
  RewriteRule ^/$ /index.html [QSA]

  # Rewrite to check for Rails cached page
  RewriteRule ^([^.]+)$ $1.html [QSA]

  RewriteCond %{DOCUMENT_ROOT}/%{REQUEST_FILENAME} !-f
  RewriteRule ^/(.*)$ balancer://<%= @service_name %>%{REQUEST_URI} [P,QSA,L]
  <Proxy balancer://<%= @service_name %>>
    Allow from any
    <% if @server['backend'] == 'unicorn' %>
    BalancerMember unix:<%= @run_path %>/unicorn.sock
    <% elsif @server['backend'] == 'thin' %>
    <% @server['workers'].times.each do |i| %>
    BalancerMember http://127.0.0.1:<%= @server['port'].to_i + i %>
    <% end %>
    <% end %>
  </Proxy>

  ErrorDocument 503 /503.html

  ErrorLog <%= @error_log_path %>
  LogLevel warn
  CustomLog <%= @access_log_path %> combined

  Include <%= @code_path %>/etc/noosfero/apache/cache.conf

</VirtualHost>

<% if @ssl[:enable] %>
<VirtualHost *:443>
  ServerName <%= @server_name %>
  <% @custom_domains.each do |domain| %>
  ServerAlias <%= domain %>
  <% end %>

  SSLEngine on
  SSLProxyEngine On
  SSLCertificateFile <%= @ssl[:certificate] %>;
  SSLCertificateKeyFile <%= @ssl[:certificate_key] %>;
  SSLCertificateChainFile <%= @ssl[:certificate_chain] %>;
  SSLVerifyClient None

  RewriteEngine On
  ProxyPreserveHost On
  # http proxy
  RewriteRule ^.*$ http://127.0.0.1:<% @server[:proxy_port] %>%{REQUEST_URI} [P,QSA,L]

</VirtualHost>
<% end %>
